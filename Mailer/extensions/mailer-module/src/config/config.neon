services:
	router: Remp\MailerModule\Models\RouterFactory::createRouter
	environmentConfig: Remp\MailerModule\Models\EnvironmentConfig

	linkedServices:
		factory: Remp\MailerModule\Models\Config\LinkedServices
		setup:
			- linkService(beam, %remp.beam.web_addr%, album)
			- linkService(campaign, %remp.campaign.web_addr%, trending-up)
			- linkService(mailer, /, email)

	searchConfig:
		factory: Remp\MailerModule\Models\Config\SearchConfig
		setup:
			- setMaxResultCount(%max_result_count%)

	editorConfig:
		factory: Remp\MailerModule\Models\Config\EditorConfig
		setup:
			- setTemplateEditor(%template_editor%)

	localizationConfig:
		factory: Remp\MailerModule\Models\Config\LocalizationConfig(@environmentConfig::get('LOCALE'))

	permissionManager:
		factory: Remp\MailerModule\Models\Auth\PermissionManager

	# Latte filters
	filterLoader:
		factory: Remp\MailerModule\Filters\FilterLoader
		setup:
			- register('yesNo', [Remp\MailerModule\Filters\YesNoFilter(), process])

	nette.latteFactory:
		setup:
			- addFilterLoader([@filterLoader, 'load'])

	mailWorkerCommand:
		factory: Remp\MailerModule\Commands\MailWorkerCommand(@commandsLogger)
		setup:
			- setShutdownInterface(@hermesShutdown)

	templateEngine:
		factory: Remp\MailerModule\Models\ContentGenerator\Engine\EngineFactory
		setup:
			- register('twig', Remp\MailerModule\Models\ContentGenerator\Engine\TwigEngine())
			- defaultEngine('twig')

	redisClientFactory: Remp\MailerModule\Models\RedisClientFactory(%redis.host%, %redis.port%, %redis.db%, %redis.password%, %redis_client_factory.prefix%)

	console:
		factory: Symfony\Component\Console\Application
		setup:
			- add(Remp\MailerModule\Commands\ProcessJobCommand())
			- add(@mailWorkerCommand)
			- add(Remp\MailerModule\Commands\DatabaseSeedCommand())
			- add(Remp\MailerModule\Commands\DemoSeedCommand())
			- add(Remp\MailerModule\Commands\ProcessJobStatsCommand())
			- add(Remp\MailerModule\Commands\AggregateMailTemplateStatsCommand())
			- add(Remp\MailerModule\Commands\HeartbeatCommand())
			- add(Remp\MailerModule\Commands\MailTypeStatsCommand())
			- add(Remp\MailerModule\Commands\RemoveOldMailJobBatchesCommand())
			- add(Remp\MailerModule\Commands\MigrateMailLogsAndConversionsCommand())
			- add(Remp\MailerModule\Commands\MigrateUserSubscriptionsAndVariantsCommand())
			- add(Remp\MailerModule\Commands\MigrateAutologinTokensCommand())
			- add(Remp\MailerModule\Commands\BigintMigrationCleanupCommand())
			- add(Remp\MailerModule\Commands\UnsubscribeInactiveUsersCommand())
			- add(@hermesWorker)
			- setCatchExceptions(true)

	# Loggers
	apiLogger:
		factory: Monolog\Logger('api-logger')
	commandsLogger:
		factory: Monolog\Logger('commands-logger')
	mailProcessLogger:
		factory: Monolog\Logger('mail-process-logger')
	mailgunLogger:
		factory: Monolog\Logger('mailgun-logger')

	hermesLogRedact: Remp\MailerModule\Hermes\LogRedact
	hermesLogger:
		factory: Monolog\Logger('hermes-logger')
		setup:
			- pushProcessor(@hermesLogRedact::add(['password', 'token', 'content']))

	dateFormatterFactory:
		factory: Remp\MailerModule\Models\Formatters\DateFormatterFactory(%locale%, %timezone%)

	# shutdown hermes and mail worker through hermes_shutdown key in redis (override in local config with second string argument if you want to change key)
	hermesShutdown: Tomaj\Hermes\Shutdown\PredisShutdown(@redisClientFactory::getClient())
	hermesWorkerWaitCallback: Remp\MailerModule\Commands\HermesWorkerWaitCallback
	hermesRedisDriver:
		class: Remp\MailerModule\Hermes\RedisDriver
		setup:
			- setupPriorityQueue('hermes_tasks_high', \Remp\MailerModule\Hermes\RedisDriver::PRIORITY_HIGH)
			- setupPriorityQueue('hermes_tasks', \Remp\MailerModule\Hermes\RedisDriver::PRIORITY_MEDIUM)
			- setupPriorityQueue('hermes_tasks_low', \Remp\MailerModule\Hermes\RedisDriver::PRIORITY_LOW)
			- setupSleepTime(1)
	hermesDispatcher:
		factory: Tomaj\Hermes\Dispatcher(@hermesRedisDriver, @hermesLogger, @hermesShutdown)
	hermesEmitter:
		factory: Tomaj\Hermes\Emitter(@hermesRedisDriver, @hermesLogger)
	- Remp\MailerModule\Hermes\HermesTasksQueue
	- Remp\MailerModule\Repositories\HermesTasksRepository

	hermesWorker:
		factory: Remp\MailerModule\Commands\HermesWorkerCommand
		setup:
			- add('list-created', Remp\MailerModule\Hermes\ListCreatedHandler())
			- add('mailgun-event', Remp\MailerModule\Hermes\MailgunEventHandler())
			- add('mailgun-event', Remp\MailerModule\Hermes\MailgunEventClickHandler())
			- add('heartbeat', Remp\MailerModule\Hermes\PingMysql())
			- add('send-email', Remp\MailerModule\Hermes\SendEmailHandler())
			- add('user-subscribed', Remp\MailerModule\Hermes\SubscribeHandler())
			- add('user-unsubscribed', Remp\MailerModule\Hermes\UnsubscribeHandler())

	eventDispatcher:
		factory: League\Event\EventDispatcher

	emailAllowList: Remp\MailerModule\Models\Mailer\EmailAllowList

	segmentAgreggator:
		factory: Remp\MailerModule\Models\Segment\Aggregator
		setup:
			- register(Remp\MailerModule\Models\Segment\Mailer())

	allowedDomainManager: Remp\MailerModule\Models\ContentGenerator\AllowedDomainManager

	anchorRtmReplace: Remp\MailerModule\Models\ContentGenerator\Replace\AnchorRtmReplace
	urlRtmReplace: Remp\MailerModule\Models\ContentGenerator\Replace\UrlRtmReplace
	textUrlRtmReplace: Remp\MailerModule\Models\ContentGenerator\Replace\TextUrlRtmReplace
	anchorRtmClickReplace: Remp\MailerModule\Models\ContentGenerator\Replace\AnchorRtmClickReplace
	urlRtmClickReplace: Remp\MailerModule\Models\ContentGenerator\Replace\UrlRtmClickReplace

	contentGenerator:
		factory: Remp\MailerModule\Models\ContentGenerator\ContentGenerator
		setup:
			- register(@anchorRtmClickReplace)
			- register(@urlRtmClickReplace)
			- register(@anchorRtmReplace)
			- register(@urlRtmReplace)
			- register(@textUrlRtmReplace)
	generatorInputFactory: Remp\MailerModule\Models\ContentGenerator\GeneratorInputFactory

	mailgunMailer:
		factory: Remp\MailerModule\Models\Mailer\MailgunMailer
		autowired: false

	mailFactory:
		factory: Remp\MailerModule\Models\Sender\MailerFactory
		setup:
			# Register all Mailers (Nette\Mail\IMailer)
			- addMailer(Remp\MailerModule\Models\Mailer\SmtpMailer())
			- addMailer(@mailgunMailer)

	# SSO authentication
	- Remp\MailerModule\Models\Sso\Client(%sso_addr%)
	authenticator:
		factory: Remp\MailerModule\Models\Sso\Authenticator(%sso_error_url%)

	# API authentication
	apiTokenRepository:
		factory: Remp\MailerModule\Models\Auth\SsoTokenRepository

	serviceParamsProvider:
		factory: Remp\MailerModule\Models\ServiceParams\DefaultServiceParamsProvider

	# Beam
	- Remp\MailerModule\Models\Beam\Client(%remp.beam.web_addr%, %remp.beam.token%)
	- Remp\MailerModule\Models\Beam\UnreadArticlesResolver
	- Remp\MailerModule\Models\Beam\JournalFactory(%remp.beam.segments_addr%)

	config: Remp\MailerModule\Models\Config\Config
	- Remp\MailerModule\Models\Sender
	- Remp\MailerModule\Models\Job\BatchEmailGenerator(@mailProcessLogger)
	- Remp\MailerModule\Models\Job\MailCache
	- Remp\MailerModule\Models\Job\JobSegmentsManager
	- Remp\MailerModule\Models\Auth\AutoLogin

	- Remp\MailerModule\Models\HealthChecker

	- Remp\MailerModule\Models\Users\UserManager

	- Remp\MailerModule\Models\MailTranslator

	# API
	- Tomaj\NetteApi\Link\ApiLink
	- Tomaj\NetteApi\Misc\IpDetector

	apiDecider:
		factory: Tomaj\NetteApi\ApiDecider
		setup:
			- enableGlobalPreflight(Tomaj\NetteApi\Handlers\CorsPreflightHandler(Nette\Http\Response(), %preflight.headers%))
			- addApi(\Tomaj\NetteApi\EndpointIdentifier('POST', 1, 'users', 'subscribe'), \Remp\MailerModule\Api\v1\Handlers\Users\SubscribeHandler(), \Tomaj\NetteApi\Authorization\BearerTokenAuthorization())
			- addApi(\Tomaj\NetteApi\EndpointIdentifier('POST', 1, 'users', 'un-subscribe'), \Remp\MailerModule\Api\v1\Handlers\Users\UnSubscribeHandler(), \Tomaj\NetteApi\Authorization\BearerTokenAuthorization())
			- addApi(\Tomaj\NetteApi\EndpointIdentifier('POST', 1, 'users', 'bulk-subscribe'), \Remp\MailerModule\Api\v1\Handlers\Users\BulkSubscribeHandler(), \Tomaj\NetteApi\Authorization\BearerTokenAuthorization())
			- addApi(\Tomaj\NetteApi\EndpointIdentifier('POST', 1, 'users', 'check-token'), \Remp\MailerModule\Api\v1\Handlers\Users\CheckTokenHandler(), \Tomaj\NetteApi\Authorization\NoAuthorization())
			- addApi(\Tomaj\NetteApi\EndpointIdentifier('POST', 1, 'users', 'email-changed'), \Remp\MailerModule\Api\v1\Handlers\Users\EmailChangedHandler(), \Tomaj\NetteApi\Authorization\BearerTokenAuthorization())
			- addApi(\Tomaj\NetteApi\EndpointIdentifier('POST', 1, 'users', 'user-preferences'), \Remp\MailerModule\Api\v1\Handlers\Users\UserPreferencesHandler(), \Tomaj\NetteApi\Authorization\BearerTokenAuthorization())
			- addApi(\Tomaj\NetteApi\EndpointIdentifier('POST', 1, 'users', 'user-registered'), \Remp\MailerModule\Api\v1\Handlers\Users\UserRegisteredHandler(), \Tomaj\NetteApi\Authorization\BearerTokenAuthorization())
			- addApi(\Tomaj\NetteApi\EndpointIdentifier('POST', 1, 'users', 'bulk-user-registered'), \Remp\MailerModule\Api\v1\Handlers\Users\BulkUserRegisteredHandler(), \Tomaj\NetteApi\Authorization\BearerTokenAuthorization())
			- addApi(\Tomaj\NetteApi\EndpointIdentifier('POST', 1, 'users', 'is-subscribed'), \Remp\MailerModule\Api\v1\Handlers\Users\IsSubscribedHandler(), \Tomaj\NetteApi\Authorization\BearerTokenAuthorization())
			- addApi(\Tomaj\NetteApi\EndpointIdentifier('POST', 1, 'users', 'is-unsubscribed'), \Remp\MailerModule\Api\v1\Handlers\Users\IsUnsubscribedHandler(), \Tomaj\NetteApi\Authorization\BearerTokenAuthorization())
			- addApi(\Tomaj\NetteApi\EndpointIdentifier('POST', 1, 'users', 'logs'), \Remp\MailerModule\Api\v1\Handlers\Users\LogsHandler(), \Tomaj\NetteApi\Authorization\BearerTokenAuthorization())
			- addApi(\Tomaj\NetteApi\EndpointIdentifier('POST', 1, 'users', 'logs-count-per-status'), \Remp\MailerModule\Api\v1\Handlers\Users\LogsCountPerStatusHandler(), \Tomaj\NetteApi\Authorization\BearerTokenAuthorization())
			- addApi(\Tomaj\NetteApi\EndpointIdentifier('POST', 1, 'users', 'delete'), \Remp\MailerModule\Api\v1\Handlers\Users\UserDeleteApiHandler(@apiLogger), \Tomaj\NetteApi\Authorization\BearerTokenAuthorization())
			- addApi(\Tomaj\NetteApi\EndpointIdentifier('POST', 1, 'mailers', 'mailgun'), \Remp\MailerModule\Api\v1\Handlers\Mailers\MailgunEventsHandler(), \Tomaj\NetteApi\Authorization\NoAuthorization())
			- addApi(\Tomaj\NetteApi\EndpointIdentifier('POST', 1, 'mailers', 'generate-mail'), \Remp\MailerModule\Api\v1\Handlers\Mailers\MailGeneratorHandler(), \Tomaj\NetteApi\Authorization\BearerTokenAuthorization())
			- addApi(\Tomaj\NetteApi\EndpointIdentifier('POST', 1, 'mailers', 'preprocess-generator-parameters'), \Remp\MailerModule\Api\v1\Handlers\Mailers\MailGeneratorPreprocessHandler(), \Tomaj\NetteApi\Authorization\BearerTokenAuthorization())
			- addApi(\Tomaj\NetteApi\EndpointIdentifier('GET', 1, 'mailers', 'generator-templates'), \Remp\MailerModule\Api\v1\Handlers\Mailers\GeneratorTemplatesListingHandler(), \Tomaj\NetteApi\Authorization\BearerTokenAuthorization())
			- addApi(\Tomaj\NetteApi\EndpointIdentifier('POST', 1, 'mailers', 'templates'), \Remp\MailerModule\Api\v1\Handlers\Mailers\MailCreateTemplateHandler(), \Tomaj\NetteApi\Authorization\BearerTokenAuthorization())
			- addApi(\Tomaj\NetteApi\EndpointIdentifier('POST', 1, 'mailers', 'jobs'), \Remp\MailerModule\Api\v1\Handlers\Mailers\MailJobCreateApiHandler(), \Tomaj\NetteApi\Authorization\BearerTokenAuthorization())
			- addApi(\Tomaj\NetteApi\EndpointIdentifier('POST', 2, 'mailers', 'jobs'), \Remp\MailerModule\Api\v2\Handlers\Mailers\MailJobCreateApiHandler(), \Tomaj\NetteApi\Authorization\BearerTokenAuthorization())
			- addApi(\Tomaj\NetteApi\EndpointIdentifier('GET', 1, 'mailers', 'mail-types'), \Remp\MailerModule\Api\v1\Handlers\Mailers\MailTypesListingHandler(), \Tomaj\NetteApi\Authorization\BearerTokenAuthorization())
			- addApi(\Tomaj\NetteApi\EndpointIdentifier('GET', 2, 'mailers', 'mail-types'), \Remp\MailerModule\Api\v2\Handlers\Mailers\MailTypesListingHandler(), \Tomaj\NetteApi\Authorization\BearerTokenAuthorization())
			- addApi(\Tomaj\NetteApi\EndpointIdentifier('GET', 3, 'mailers', 'mail-types'), \Remp\MailerModule\Api\v3\Handlers\Mailers\MailTypesListingHandler(), \Tomaj\NetteApi\Authorization\BearerTokenAuthorization())
			- addApi(\Tomaj\NetteApi\EndpointIdentifier('GET', 1, 'mailers', 'mail-type-categories'), \Remp\MailerModule\Api\v1\Handlers\Mailers\MailTypeCategoriesHandler(), \Tomaj\NetteApi\Authorization\BearerTokenAuthorization())
			- addApi(\Tomaj\NetteApi\EndpointIdentifier('POST', 1, 'mailers', 'mail-type-upsert'), \Remp\MailerModule\Api\v1\Handlers\Mailers\MailTypeUpsertHandler(), \Tomaj\NetteApi\Authorization\BearerTokenAuthorization())
			- addApi(\Tomaj\NetteApi\EndpointIdentifier('GET', 1, 'mailers', 'templates'), \Remp\MailerModule\Api\v1\Handlers\Mailers\MailTemplatesListingHandler(), \Tomaj\NetteApi\Authorization\BearerTokenAuthorization())
			- addApi(\Tomaj\NetteApi\EndpointIdentifier('GET', 1, 'segments', 'list'), \Remp\MailerModule\Api\v1\Handlers\Segments\SegmentsListingHandler(), \Tomaj\NetteApi\Authorization\BearerTokenAuthorization())
			- addApi(\Tomaj\NetteApi\EndpointIdentifier('POST', 2, 'mailers', 'mailgun'), \Remp\MailerModule\Api\v2\Handlers\Mailers\MailgunEventsHandler(), \Tomaj\NetteApi\Authorization\NoAuthorization())
			- addApi(\Tomaj\NetteApi\EndpointIdentifier('POST', 1, 'mailers', 'send-email'), \Remp\MailerModule\Api\v1\Handlers\Mailers\SendEmailHandler(), \Tomaj\NetteApi\Authorization\BearerTokenAuthorization())
			- addApi(\Tomaj\NetteApi\EndpointIdentifier('POST', 1, 'mailers', 'mail-type-variants'), \Remp\MailerModule\Api\v1\Handlers\Mailers\MailTypeVariantCreateApiHandler(), \Tomaj\NetteApi\Authorization\BearerTokenAuthorization())
			- addApi(\Tomaj\NetteApi\EndpointIdentifier('GET', 1, 'mailers', 'render-template'), \Remp\MailerModule\Api\v1\Handlers\Mailers\RenderTemplateApiHandler(), \Tomaj\NetteApi\Authorization\BearerTokenAuthorization())

	# Generator
	generator:
		factory: Remp\MailerModule\Models\Generators\GeneratorFactory
		setup:
			- registerGenerator('empty', 'Empty generator', Remp\MailerModule\Models\Generators\EmptyGenerator())
			- registerGenerator('best_performing_articles', 'Best performing articles', \Remp\MailerModule\Models\Generators\GenericBestPerformingArticlesGenerator())

	transporter:
		factory: Remp\MailerModule\Models\PageMeta\Transport\GuzzleTransport

	content:
		factory: Remp\MailerModule\Models\PageMeta\Content\GenericPageContent

	shopContent:
		factory: Remp\MailerModule\Models\PageMeta\Content\GenericShopContent

	# Repositories
	- Remp\MailerModule\Repositories\AuditLogRepository
	- Remp\MailerModule\Repositories\ConfigsRepository
	- Remp\MailerModule\Repositories\MailTemplateLinksRepository
	- Remp\MailerModule\Repositories\MailTemplateLinkClicksRepository

	userSubscriptionsRepository:
		factory: Remp\MailerModule\Repositories\UserSubscriptionsRepository
		setup:
			- setNewTableName('mail_user_subscriptions_v2')
			- setNewTableDataMigrationIsRunningFlag(Remp\MailerModule\Commands\MigrateUserSubscriptionsAndVariantsCommand::USER_SUBSCRIPTIONS_AND_VARIANTS_MIGRATION_IS_RUNNING)
			- setRedisClientFactory(@redisClientFactory)

	userSubscriptionVariantsRepository:
		factory: Remp\MailerModule\Repositories\UserSubscriptionVariantsRepository
		setup:
			- setNewTableName('mail_user_subscription_variants_v2')
			- setNewTableDataMigrationIsRunningFlag(Remp\MailerModule\Commands\MigrateUserSubscriptionsAndVariantsCommand::USER_SUBSCRIPTIONS_AND_VARIANTS_MIGRATION_IS_RUNNING)
			- setRedisClientFactory(@redisClientFactory)

	logsRepository:
		factory: Remp\MailerModule\Repositories\LogsRepository
		setup:
			- setNewTableName('mail_logs_v2')
			- setNewTableDataMigrationIsRunningFlag(Remp\MailerModule\Commands\MigrateMailLogsAndConversionsCommand::MAIL_LOGS_AND_CONVERSIONS_IS_RUNNING)
			- setRedisClientFactory(@redisClientFactory)

	logConversionsRepository:
		factory: Remp\MailerModule\Repositories\LogConversionsRepository
		setup:
			- setNewTableName('mail_log_conversions_v2')
			- setNewTableDataMigrationIsRunningFlag(Remp\MailerModule\Commands\MigrateMailLogsAndConversionsCommand::MAIL_LOGS_AND_CONVERSIONS_IS_RUNNING)
			- setRedisClientFactory(@redisClientFactory)

	- Remp\MailerModule\Repositories\ActiveRowFactory

	- Remp\MailerModule\Repositories\LayoutsRepository
	- Remp\MailerModule\Repositories\SnippetsRepository
	- Remp\MailerModule\Repositories\ListsRepository
	- Remp\MailerModule\Repositories\ListCategoriesRepository
	- Remp\MailerModule\Repositories\ListVariantsRepository
	- Remp\MailerModule\Repositories\TemplatesRepository
	- Remp\MailerModule\Repositories\JobsRepository
	- Remp\MailerModule\Repositories\JobQueueRepository
	- Remp\MailerModule\Repositories\BatchesRepository
	- Remp\MailerModule\Repositories\BatchTemplatesRepository

	autologinTokensRepository:
		factory: Remp\MailerModule\Repositories\AutoLoginTokensRepository
		setup:
			- setNewTableName('autologin_tokens_v2')
			- setNewTableDataMigrationIsRunningFlag(Remp\MailerModule\Commands\MigrateAutologinTokensCommand::AUTOLOGIN_TOKENS_MIGRATION_IS_RUNNING)
			- setRedisClientFactory(@redisClientFactory)

	- Remp\MailerModule\Repositories\SourceTemplatesRepository
	- Remp\MailerModule\Repositories\MailTypesRepository
	- Remp\MailerModule\Repositories\MailTemplateStatsRepository
	- Remp\MailerModule\Repositories\MailTypeStatsRepository
	- Remp\MailerModule\Repositories\TemplateTranslationsRepository
	- Remp\MailerModule\Repositories\LayoutTranslationsRepository
	- Remp\MailerModule\Repositories\SnippetTranslationsRepository

	# Factories
	- Remp\MailerModule\Components\DataTable\DataTableFactory
	- Remp\MailerModule\Components\SendingStats\ISendingStatsFactory
	- Remp\MailerModule\Components\GeneratorWidgets\IGeneratorWidgetsFactory
	- Remp\MailerModule\Components\BatchExperimentEvaluation\IBatchExperimentEvaluationFactory
	- Remp\MailerModule\Components\ApplicationStatus\IApplicationStatusFactory

	# Generator Widgets
	- Remp\MailerModule\Components\GeneratorWidgets\GeneratorWidgetsManager

	# Forms
	- Remp\MailerModule\Forms\SignInFormFactory
	- Remp\MailerModule\Forms\ConfigFormFactory
	- Remp\MailerModule\Forms\ListFormFactory
	- Remp\MailerModule\Forms\LayoutFormFactory
	- Remp\MailerModule\Forms\SnippetFormFactory
	- Remp\MailerModule\Forms\TemplateFormFactory
	- Remp\MailerModule\Forms\TemplateTestFormFactory
	- Remp\MailerModule\Forms\JobFormFactory
	- Remp\MailerModule\Forms\NewBatchFormFactory
	- Remp\MailerModule\Forms\EditBatchFormFactory
	- Remp\MailerModule\Forms\NewTemplateFormFactory
	- Remp\MailerModule\Forms\SourceTemplateFormFactory
	- Remp\MailerModule\Forms\MailGeneratorFormFactory

	# Helpers
	- Remp\MailerModule\Models\Generators\WordpressHelpers
	embedParser:
		factory: Remp\MailerModule\Models\Generators\EmbedParser
	articleLocker:
		factory: Remp\MailerModule\Models\Generators\ArticleLocker

	# healtCheck - inject temp for storage check
	- Remp\MailerModule\Presenters\HealthPresenter(%tempDir%)

	- Remp\MailerModule\Components\MailLinkStats\MailLinkStats
