#####################
## Laravel framework variables

# Laravel's environment variable.
APP_ENV=${APP_ENV}

# Application key used to encrypt session. No need to edit, it's generated by php artisan key:generate command
APP_KEY=${APP_KEY}

# Flag whether the debug options should be enabled or not
APP_DEBUG=${APP_DEBUG}

# URL of where the application is running
APP_URL=${APP_URL}

# Expiration time in seconds for session (indicates seconds since the last activity)
APP_SESSION_EXPIRATION=${APP_SESSION_EXPIRATION}

# Application locale affecting formatting settings of viewed data.
APP_LOCALE=${APP_LOCALE}

# Default driver for storing cache data. See config/cache.php for all available drivers.
CACHE_DRIVER=${CACHE_DRIVER}

# Default driver for logging. See config/log.php for all available drivers.
LOG_CHANNEL=${LOG_CHANNEL}

#####################
## SQL database connection details. MySQL (and derivates) are supported and tested.

# Connection adapter to be used for communicating with database. See config/database.php for all available connections.
# Only MySQL is tested and supported by remp2020 developers.
DB_CONNECTION=${DB_CONNECTION}

# Database host (e.g. localhost, IP address or any resolvable host of your database server instance).
DB_HOST=${DB_HOST}

# Name of the database.
DB_DATABASE=${DB_DATABASE}

# User to be used to connect to database.
DB_USERNAME=${DB_USERNAME}

# Password to be used to connect to database.
DB_PASSWORD=${DB_PASSWORD}

# Port to be used to connect to database. 3306 is the default port used by MySQL and its derivates.
DB_PORT=${DB_PORT}

#####################
## Redis connection details

# Redis host (e.g. localhost, IP address or any resolvable host of your database server instance).
REDIS_HOST=${REDIS_HOST}

# Redis connection password (uncomment if used)
REDIS_PASSWORD=${REDIS_PASSWORD}

# Redis connection port. 6379 is the default port used by Redis installation.
REDIS_PORT=${REDIS_PORT}

#####################
## SSO configuration

# Full address of SSO instance
REMP_SSO_ADDR=${REMP_SSO_ADDR}
REMP_SSO_API_TOKEN=${REMP_SSO_API_TOKEN}

# URL where user is redirected if SSO login fails
REMP_SSO_ERROR_URL=${REMP_SSO_ERROR_URL}

#####################
## REMP services

## Mandatory micro-services complementing Beam admin

# URL to Segments API endpoint
REMP_SEGMENTS_ADDR=${REMP_SEGMENTS_ADDR}

# Authorization token (if configured on the segments API vhost)
REMP_SEGMENTS_AUTH_TOKEN=${REMP_SEGMENTS_AUTH_TOKEN}

# URL to Tracker API endpoint
REMP_TRACKER_ADDR=${REMP_TRACKER_ADDR}

## Following are addresses of other installed REMP services. Keep blank to indicate that the service is not used.
REMP_CAMPAIGN_ADDR=${REMP_CAMPAIGN_ADDR}
REMP_MAILER_ADDR=${REMP_MAILER_ADDR}

# API token to access Mailer. The default configuration of REMP tools always uses API token generated in SSO, you can
# grab your token there.
REMP_MAILER_API_TOKEN=${REMP_MAILER_API_TOKEN}

# Segmenter settings (beta)
# Leave AUTH_TOKEN empty if not needed, otherwise use with 'Basic' / 'Bearer' prefix.
REMP_SEGMENTER_API_ADDR=${REMP_SEGMENTER_API_ADDR}
REMP_SEGMENTER_AUTH_TOKEN=${REMP_SEGMENTER_AUTH_TOKEN}

#####################
## Public dashboard settings
## Beam allows access to the /public URL without need to be authenticated via SSO. Instead of that, HTTP Auth
## is provided which can be shared among users. You can configure the HTTP authentication credentials here.

DASHBOARD_USERNAME=${DASHBOARD_USERNAME}
DASHBOARD_PASSWORD=${DASHBOARD_PASSWORD}
DASHBOARD_USERNAME2=${DASHBOARD_USERNAME2}
DASHBOARD_PASSWORD2=${DASHBOARD_PASSWORD2}

###################
## Pageviews data shown in graphs can be loaded either from Journal API snapshots or by directly querying Journal API
## Valid options: "snapshots" or "journal" (default)
PAGEVIEW_GRAPH_DATA_SOURCE=${PAGEVIEW_GRAPH_DATA_SOURCE}

#####################
## Airbrake / Errbit

# Flag indicating whether the error tracking should be enabled
AIRBRAKE_ENABLED=${AIRBRAKE_ENABLED}

# API host provided by Airbrake / Errbit
AIRBRAKE_API_HOST=${AIRBRAKE_API_HOST}

# API key provided by Airbrake / Errbit
AIRBRAKE_API_KEY=${AIRBRAKE_API_KEY}

#####################
## Google reporting API integration
## Beam provides way to integrate with Google reporting API which would allow you to display Google Analytics data
## directly in Beam. You can implement your own view of data by implementing GoogleAnalyticsReportingContract and
## you can check the reference implementation in app/Contracts/GoogleAnalytics/GoogleAnalyticsReporting.php

# Flag indicating whether the reporting should be enabled or not (affects main menu and instantiation of
# reporting-related classes.
GOOGLE_GA_REPORTING_ENABLED=${GOOGLE_GA_REPORTING_ENABLED}

# Application name to be used (configured in Google Developer Console)
GOOGLE_APP_NAME=${GOOGLE_APP_NAME}

# Absolute path to service account JSON used to authenticate against Application name provided above.
GOOGLE_SERVICE_ACCOUNT_FILE=${GOOGLE_SERVICE_ACCOUNT_FILE}

# Google analytics view ID (taken from GA structure of Accounts - Properties & Apps - Views)
GOOGLE_GA_VIEW_ID=${GOOGLE_GA_VIEW_ID}

# Temporarily disable property token filtering for debugging
DISABLE_TOKEN_FILTERING=${DISABLE_TOKEN_FILTERING}
