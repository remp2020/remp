###############################################################
## .env.docker file is used for docker-compose commands
###############################################################

#####################
## Laravel framework and application variables

# Laravel's environment variable.
APP_ENV=local

# Application key used to encrypt session. No need to uncomment, it's generated automatically by php artisan key:generate command
#APP_KEY=

# Flag whether the debug options should be enabled or not
APP_DEBUG=true

# URL of where the application is running
APP_URL=

# Expiration time in seconds for session (indicates seconds since the last activity)
APP_SESSION_EXPIRATION=120

# Application locale affecting formatting settings of viewed data.
APP_LOCALE=en

# Default driver for storing cache data. See config/cache.php for all available drivers.
CACHE_DRIVER_BEAM=redis
CACHE_DRIVER_CAMPAIGN=redis
CACHE_DRIVER_SSO=file

# Default driver for job queueing. See config/queue.php for all available drivers.
QUEUE_DRIVER_CAMPAIGN=redis
QUEUE_DRIVER_SSO=sync

# Default driver for logging. See config/log.php for all available drivers.
LOG_CHANNEL=stack

# URL to be used when searching for position of inline banner on the target web. Target URL should have REMP JS tracking
# code inserted. Usually it points to the main page of your newspaper.
# If configured properly, inline banner selector will display your homepage with available banner positions (all elements
# with CSS class "remp-banner") highlighted so you can select and use them to display the banner in.
CLIENT_SITE_URL=


#####################
## SQL database connection details. MySQL (and derivates) are supported and tested.

# Connection adapter to be used for communicating with database. See config/database.php for all available connections.
# Only MySQL is tested and supported by remp2020 developers.
DB_CONNECTION=mysql

# Database host (e.g. localhost, IP address or any resolvable host of your database server instance).
DB_HOST=mysql

# Name of the database.
DB_DATABASE_BEAM=beam
DB_DATABASE_CAMPAIGN=campaign
DB_DATABASE_SSO=sso
DB_DATABASE_MAILER=mailer

# User to be used to connect to database.
DB_USERNAME=root

# Password to be used to connect to database.
DB_PASSWORD=secret

# Port to be used to connect to database. 3306 is the default port used by MySQL and its derivates.
DB_PORT=3306


#####################
## Redis connection details

# Redis client to be used. Available values are:
# - predis: default value, used if nothing is set
# - mock: fake implementation for tests
# It's recommended to set this variable only for testing scenarios.
REDIS_CLIENT=predis

# Redis host (e.g. localhost, IP address or any resolvable host of your database server instance).
REDIS_HOST=redis

# Redis connection password
REDIS_PASSWORD=null

# Redis connection port. 6379 is the default port used by Redis installation.
REDIS_PORT=6379

# Default redis DB
REDIS_DB=0


#####################
## SSO configuration

# INTERNAL SETTINGS
BROADCAST_DRIVER=log
SESSION_DRIVER=file

# Full address of SSO instance
REMP_SSO_ADDR=http://sso.remp.press

# API token to authenticate against other REMP services using default SSO configuration.
# The default configuration of REMP tools always uses API token generated in SSO, you can grab your token there.
REMP_SSO_API_TOKEN=

# URL where user is redirected if SSO login fails
REMP_SSO_ERROR_URL_BEAM=http://beam.remp.press/error
REMP_SSO_ERROR_URL_CAMPAIGN=http://campaign.remp.press/error
REMP_SSO_ERROR_URL_MAILER=http://mailer.remp.press/sign/error

#JWT_EMAIL_PATTERN_WHITELIST=@remp2020.com,@example.com
JWT_EMAIL_PATTERN_WHITELIST=*

GOOGLE_CLIENT_ID=151983955181-v45p7bcs2cabgvk9ejg427u6ae6uucnk.apps.googleusercontent.com
GOOGLE_CLIENT_SECRET=hEsoppyHUiPa_-EemWwn3NDh
GOOGLE_CALLBACK_URL=http://sso.remp.press/auth/google/callback

#####################
## REMP configuration

## Mandatory micro-services complementing Beam admin

# URL to Segments API endpoint
REMP_SEGMENTS_ADDR=http://segments.beam.remp.press/

# Authorization token (if configured on the segments API vhost)
REMP_SEGMENTS_AUTH_TOKEN=

## Following are addresses of other installed REMP services. Keep blank to indicate that the service is not used.

#REMP_BEAM_ADDR=http://beam.remp.press
REMP_BEAM_ADDR=
#REMP_MAILER_ADDR=http://mailer.remp.press
REMP_MAILER_ADDR=
#REMP_TRACKER_ADDR=http://tracker.beam.remp.press
REMP_TRACKER_ADDR=
#REMP_PYTHIA_SEGMENTS_ADDR=http://segments.pythia.remp.press
REMP_PYTHIA_SEGMENTS_ADDR=
#REMP_CAMPAIGN_ADDR=http://campaign.remp.press
REMP_CAMPAIGN_ADDR=
#REMP_MAILER_ADDR=http://mailer.remp.press
REMP_MAILER_ADDR=

# API token to access Mailer. The default configuration of REMP tools always uses API token generated in SSO, you can
# grab your token there.
REMP_MAILER_API_TOKEN=

# Segmenter settings (beta)
# Leave AUTH_TOKEN empty if not needed, otherwise use with 'Basic' / 'Bearer' prefix.
REMP_SEGMENTER_API_ADDR=http://segments.beam.remp.press/
REMP_SEGMENTER_AUTH_TOKEN=

# Property token from Beam (go to Beam - Properties to get the token) used for event tracking
REMP_BEAM_TRACKER_PROPERTY_TOKEN=

# API token to access Beam. The default configuration of REMP tools always uses API token generated in SSO, you can
# grab your token there.
REMP_BEAM_API_TOKEN=

#####################
## Public dashboard settings
## Beam allows access to the /public URL without need to be authenticated via SSO. Instead of that, HTTP Auth
## is provided which can be shared among users. You can configure the HTTP authentication credentials here.

DASHBOARD_USERNAME=
DASHBOARD_PASSWORD=
DASHBOARD_USERNAME2=
DASHBOARD_PASSWORD2=

###################
## Pageviews data shown in graphs can be loaded either from Journal API snapshots or by directly querying Journal API
## Valid options: "snapshots" or "journal" (default)
PAGEVIEW_GRAPH_DATA_SOURCE=

#####################
## Airbrake / Errbit

# Flag indicating whether the error tracking should be enabled
AIRBRAKE_ENABLED=false

# API host provided by Airbrake / Errbit
AIRBRAKE_API_HOST=

# API key provided by Airbrake / Errbit
AIRBRAKE_API_KEY=

#####################
## Google reporting API integration
## Beam provides way to integrate with Google reporting API which would allow you to display Google Analytics data
## directly in Beam. You can implement your own view of data by implementing GoogleAnalyticsReportingContract and
## you can check the reference implementation in app/Contracts/GoogleAnalytics/GoogleAnalyticsReporting.php

# Flag indicating whether the reporting should be enabled or not (affects main menu and instantiation of
# reporting-related classes.
GOOGLE_GA_REPORTING_ENABLED=false

# Application name to be used (configured in Google Developer Console)
GOOGLE_APP_NAME="DEV BEAM GA Reporting"

# Absolute path to service account JSON used to authenticate against Application name provided above.
GOOGLE_SERVICE_ACCOUNT_FILE=/var/www/html/Beam/google_service_account_key.json

# Google analytics view ID (taken from GA structure of Accounts - Properties & Apps - Views)
GOOGLE_GA_VIEW_ID=

# Temporarily disable property token filtering for debugging
DISABLE_TOKEN_FILTERING=


#####################
## Maxmind GeoIP

# Path to .mmdb file containing binary maxmind database. You don't need to change this unless you have paid database
# and you want to use it instead of free version provided withing the repository.
MAXMIND_DATABASE=resources/assets/maxmind/GeoLite2-Country.mmdb


#####################
## Mailer configuration

# Default timezone.
TIMEZONE=Europe/Bratislava

# Flag whether the framework should enforce HTTPS. It will set additional $_SERVER variables.
# See app/bootstrap.php for specific usage.
FORCE_HTTPS=false

# URL to frontend page providing unsubscribe feature for given %type% of newsletter. Usually used to direct user from
# email's "unsusbcribe" button. When entered, {{ unsubscribe }} variable can be used within all email templates instead
# of manually entering unsubscribe URL everywhere.
UNSUBSCRIBE_URL=https://predplatne.dennikn.sk/mail/mail-settings/un-subscribe-email/%type%

# URL to frontend page providing all email related settings - usually page with possibility to subscribe and unsubscribe
# to different newsletters. When entered, {{ settings }} variable can be used within all email templates instead of
# manually entering settings URL everywhere.
SETTINGS_URL=https://predplatne.dennikn.sk/email-settings

# Path to file indicating that Hermes worker (daemon for async event processing) should be restarted.
# The restart is required after deploy to load the latest changes into the memory.
HERMES_RESTART_FILE_PATH=/tmp/hermes_restart


#####################
## Segments Application settings

# Address on which the application should be accessible.
SEGMENTS_ADDR=0.0.0.0:8082

# Flag to indicate whether to enable debug logging or not.
SEGMENTS_DEBUG=true

# URL of edit page for segments in Beam admin
SEGMENTS_URL_EDIT=http://beam.remp.press/segments/{segment_id}/edit

# Network to be used to connect to MySQL. See https://github.com/go-sql-driver/mysql for available options.
SEGMENTS_MYSQL_NET=tcp

#####################
## Segments Elasticsearch connection details

# Resolvable comma-separated URIs on which the Elasticsearch can be accessed.
SEGMENTS_ELASTIC_ADDRS=http://elasticsearch:9200

# Username to authenticate (if enabled on the instance)
SEGMENTS_ELASTIC_USER=elastic

# Password to authenticate (if enabled on the instance)
SEGMENTS_ELASTIC_PASSWD=


#####################
## Tracker Application settings

# Address on which the application should be accessible.
TRACKER_ADDR=0.0.0.0:8081

# Comma-separated list of host:port kafka brokers for event pushing.
TRACKER_BROKER_ADDRS=kafka:9092

# Comma-separated list of hosts (e.g. "dennikn.sk,predplatne.dennikn.sk") which should be considered as internal when parsing traffic sources
TRACKER_INTERNAL_HOSTS=

# Flag to indicate whether to enable debug logging or not.
TRACKER_DEBUG=true

# Network to be used to connect to MySQL. See https://github.com/go-sql-driver/mysql for available options.
TRACKER_MYSQL_NET=tcp


#####################
## Docker user settings

# No need to specify user parameters manually. They are automatically filled with ./install.sh script
DOCKER_USER=
DOCKER_USER_ID=
DOCKER_GROUP_ID=
