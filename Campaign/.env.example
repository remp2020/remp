#####################
## Laravel framework and application variables

# Laravel's environment variable.
APP_ENV=local

# Application key used to encrypt session. No need to edit, it's generated by php artisan key:generate command
APP_KEY=

# Flag whether the debug options should be enabled or not
APP_DEBUG=true

# URL of where the application is running
APP_URL=

# Whether to force HTTPS in generated URLs no matter the request protocol.
# Useful if your request is handled behind load balancer on HTTP, but your
# application is running on HTTPS outside your infrastructure.
FORCE_HTTPS=false

# Optionally specify (comma-separated) list of trusted proxies. By default all IPs are trusted.
# More details in Laravel documentation: https://laravel.com/docs/master/requests#configuring-trusted-proxies
#APP_TRUSTED_PROXIES=*

# Expiration time in minutes for session (indicates minutes since the last activity)
SESSION_LIFETIME=120

# Application locale affecting formatting settings of viewed data.
APP_LOCALE=en

# Default driver for storing cache data. See config/cache.php for all available drivers.
CACHE_DRIVER=redis

# Default driver for job queueing. See config/queue.php for all available drivers.
QUEUE_CONNECTION=redis

# Default driver for logging. See config/log.php for all available drivers.
LOG_CHANNEL=stack

# URL to be used when searching for position of inline banner on the target web. Target URL should have REMP JS tracking
# code inserted. Usually it points to the main page of your newspaper.
# If configured properly, inline banner selector will display your homepage with available banner positions (all elements
# with CSS class "remp-banner") highlighted so you can select and use them to display the banner in.
CLIENT_SITE_URL=


#####################
## SQL database connection details. MySQL (and derivates) are supported and tested.

# Connection adapter to be used for communicating with database. See config/database.php for all available connections.
# Only MySQL is tested and supported by remp2020 developers.
DB_CONNECTION=mysql

# Database host (e.g. localhost, IP address or any resolvable host of your database server instance).
DB_HOST=mysql

# Name of the database.
DB_DATABASE=campaign

# User to be used to connect to database.
DB_USERNAME=root

# Password to be used to connect to database.
DB_PASSWORD=secret

# Port to be used to connect to database. 3306 is the default port used by MySQL and its derivates.
DB_PORT=3306


#####################
## Redis connection details

# Redis client to be used. Available values are:
# - predis: default value, used if nothing is set
# - phpredis: use if you have installed the php-redis extension for better performance
# - mock: fake implementation for tests
# It's recommended to set this variable only for testing scenarios.
# REDIS_CLIENT=

# Redis host (e.g. localhost, IP address or any resolvable host of your database server instance).
REDIS_HOST=redis

# Redis connection password (uncomment if used)
#REDIS_PASSWORD=

# Redis connection port. 6379 is the default port used by Redis installation.
REDIS_PORT=6379

# Specifies if the underlying redis connection resource should be left open when a script ends its lifecycle. Default: false
REDIS_PERSISTENT=false

# Alternative Redis connection configuration.
# The accepted format of a single connection is
#
#   proto://host:ip
#
# If Redis Sentinel is used, this variable serves as an comma-separated input
# for all available sentinel servers. In that case, the example configuration is:
#
#   tcp://redis-sentinel-a:26379,tcp://redis-sentinel-b:26379,tcp://redis-sentinel-c:26379
#
#REDIS_URL=

# Name of the Redis Sentinel service if Sentinel cluster is used. If provided, sentinel connections are configured
# from the REDIS_URL environment variable.
#REDIS_SENTINEL_SERVICE=

# Redis default database used for application read/writes. Defaults to 0.
#REDIS_DEFAULT_DATABASE=

# Redis session database used for storing Laravel sessions if SESSION_DRIVER is "redis". Defaults to 1.
#REDIS_SESSION_DATABASE=

# Redis cache database used for Laravel cache layer if CACHE_DRIVER is "redis". Defaults to 2.
#REDIS_CACHE_DATABASE=

# Redis queue database used for Laravel queue system if QUEUE_DRIVER is "redis". Defaults to 3.
#REDIS_QUEUE_DATABASE=

#####################
## SSO configuration

# Full address of SSO instance
REMP_SSO_ADDR=http://sso.remp.press

# URL where user is redirected if SSO login fails
REMP_SSO_ERROR_URL=http://campaign.remp.press/error

# Controls command overlaping expiration in minutes (default: 15)
#COMMANDS_OVERLAPPING_EXPIRES_AT=

#####################
## REMP services
## Following are addresses of other installed REMP services. Keep blank to indicate that the service is not used.

# REMP_BEAM_ADDR=http://beam.remp.press
# REMP_MAILER_ADDR=http://mailer.remp.press

## Segments and Journal API URL address (providing Beam segments and campaign stats) and timeouts
# REMP_SEGMENTS_ADDR=http://beam_segments:8082/
## Default is 5.
# REMP_SEGMENTS_TIMEOUT=
# REMP_PYTHIA_SEGMENTS_ADDR=http://segments.pythia.remp.press
## Default is 1.
# REMP_PYTHIA_SEGMENTS_TIMEOUT=

# API token to authenticate against other REMP services using default SSO configuration.
# The default configuration of REMP tools always uses API token generated in SSO, you can grab your token there.
REMP_SSO_API_TOKEN=


#####################
## Airbrake / Errbit

# Flag indicating whether the error tracking should be enabled
AIRBRAKE_ENABLED=false

# API host provided by Airbrake / Errbit
AIRBRAKE_API_HOST=

# API key provided by Airbrake / Errbit
AIRBRAKE_API_KEY=

#####################
## Sentry

# DSN which can be found in the Sentry project settings. Keep unset or empty if you don't want to track anything.
SENTRY_DSN=

# Error sample rate that should be reported to sentry. Value can be: <0,1> (0% - 100%)
SENTRY_SHOWTIME_SAMPLERATE=1

#####################
## Maxmind GeoIP

# Path to .mmdb file containing binary maxmind database. You don't need to change this unless you have paid database
# and you want to use it instead of free version provided withing the repository.
MAXMIND_DATABASE=resources/assets/maxmind/GeoLite2-Country.mmdb

#####################
# Newsletter Subscription Banner
#
# Please note that all of these settings are revealed to client and are sent via client.
# Do not include internal tokens.
#
# All of these settings are cached for all active campaigns. If you change them while a campaign is running, make sure
# you run `php artisan `campaigns:refresh-cache` command.

# Endpoint for newsletter subscriptions
#
#     https://api.example.com/subscribe
#
#NEWSLETTER_BANNER_API_ENDPOINT=

# Flag whether to use XHR request to execute the subscription call.
#
#     true: Request is made via XHR. Arbitrary success/failure handling can be done by listening to events;
#             - rempNewsletterSubscribeSuccess
#             - rempNewsletterSubscribeFailure
#
#           The response is structured as JSON:
#           {
#               "type": String // "response" if API returned response, "exception" if there's internal error
#               "response": ReadableStream // available only for type: response
#               "message": String // available only for type: exception
#           }
#
#     false: Request is made via form submission, backend is responsible for any handling
#
#NEWSLETTER_BANNER_USE_XHR=

# Content type of the request body. Available options:
#
#     json (default)
#     x-www-form-urlencoded
#     form-data
#
#NEWSLETTER_BANNER_REQUEST_BODY=

# Allows to add arbitraty HTTP headers required by the backend (in JSON format).
#
#    {"X-Foo": "Bar"}
#
#NEWSLETTER_BANNER_REQUEST_HEADERS=

# Default parameter transposition (key-value pairs) to your endpoint implementation (in JSON format).
#
# Key (email, newsletter_id, source) represents one of the Campaign-supported fields, value represents mapping to your API.
#
# Keep in mind that Content-Type header is overridden by `NEWSLETTER_BANNER_REQUEST_BODY` setting. Please make sure
# you do not put here any internal tokens or keys, since this value is exposed to client.
#
#    {"email":"my_email","newsletter_id":"my_newsletter_id","source":"my_source"}
#
#NEWSLETTER_BANNER_PARAMS_TRANSPOSITION=

# Comma separated list of params to be added to every request. Make sure to avoid collisions with built in params.
# Recommended use for this setting is to add additional parameters with value available on the displayed page.
#
# Values are populated on the fly when banner is rendered based on the configuration within rempConfig's
# rempConfig.campaign.variables setting. See README for more information and examples.
#
#    foo,bar
#
#NEWSLETTER_BANNER_PARAMS_EXTRA=

#####################
## Banners configuration

# Flag whether the prioritization of banner should be enabled or not.
#
# If two or more banners are on the exact same position the banner from campaign with more variants is prioritized.
# In the case of same amount of variants the banner from more recent campaign is prioritized.

#PRIORITIZE_BANNERS_ON_SAME_POSITION=

# Flag whether the one time banners should be enabled or not.
#
# If this option is set to `true`, the user and browser one time banners are used in Showtime.
# If you are not using the one time banners, set this option to `false` for better performance.
# The default value is `true`.
ONE_TIME_BANNER_ENABLED=true
